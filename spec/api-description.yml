swagger: '2.0'

info:
  version: 1.0.0
  title: CMAPP
  x-logo:
    url: '../docs/api-doc-logo.png'
    backgroundColor: '#fafafa'
  description: REST API to management courses.
  termsOfService: https://localhost
  contact:
    name: API Support
    email: hayderespit@gmail.com
    url: https://localhost
  license:
    name: ISC
    url: https://www.isc.org/
servers:
  - url: http://localhost:{port}/{basePath}
    description: Development server
    variables:
      port:
        default: '8080'
      basePath:
        default: '/api'
  - url: http://localhost:{port}/{basePath}
    description: Production server
    variables:
      port:
        default: '80'
      basePath:
        default: '/api'
tags:
  - name: Students
    description: Everything about the students
  - name: Courses
    description: Everything about the courses

# schemes:
# - http
paths:
  /students:
    get:
      tags:
        - Students
      summary: Get Students
      description: Returns all students from the system.
      operationId: getStudents
      produces:
        - application/json
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Student'
    post:
      tags:
        - Students
      summary: Add Student
      description: Create new student to show it in the applications.
      operationId: addStudent
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Student'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/definitions/Student'
  /students/{studentId}:
    put:
      tags:
        - Students
      summary: Update student
      description: Update an exiting student.
      operationId: updatestudent
      produces:
        - application/json
      parameters:
        - name: studentId
          in: path
          description: student id to delete
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Student'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/definitions/Student'
    delete:
      tags:
        - Students
      summary: Delete student
      description: Delete student of the application.
      operationId: deletestudent
      parameters:
        - name: studentId
          in: path
          description: student id to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid ID supplied
        404:
          description: Student not found
  /courses:
    get:
      tags:
        - Courses
      summary: Get Courses
      description: Returns all courses from the system.
      operationId: getCourses
      produces:
        - application/json
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Course'
    post:
      tags:
        - Courses
      summary: Add course
      description: Create new course to show it in the applications.
      operationId: addCourse
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Course'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/definitions/Course'
  /courses/{courseId}:
    put:
      tags:
        - Courses
      summary: Update course
      description: Update an exiting course.
      operationId: updateCourse
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Course'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/definitions/Course'
    delete:
      tags:
        - Courses
      summary: Delete course
      description: Delete course of the application.
      operationId: deleteCourse
      parameters:
        - name: courseId
          in: path
          description: Course id to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid ID supplied
        404:
          description: City not found

definitions:
  Student:
    type: object
    required:
      - name
      - lastname
      - age
      - email
    properties:
      name:
        type: string
        example: 'Hayder'
      lastname:
        type: string
        example: 'Espinoza'
      age:
        type: integer
        example: 26
      email:
        type: string
        example: hayderespit@gmail.com
  Course:
    type: object
    required:
      - name
      - country_id
    properties:
      name:
        type: string
        example: 'Cartagena'
      schedule:
        type: object
        properties:
          day:
            type: string
            example: 'monday'
          time:
            type: integer
            example: 10
      startDate:
        type: string
        example: '12-24-2019'
      endDate:
        type: string
        example: '12-26-2019'
